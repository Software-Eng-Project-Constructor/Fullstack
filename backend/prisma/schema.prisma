generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  teamMembers TeamMember[] // Added relationship to TeamMember
}

model Project {
  id          String       @id @default(uuid()) // Changed to String to match component expectations
  name        String
  teamMembers TeamMember[] // Added relationship
  milestones  Milestone[]  // Added relationship
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model TeamMember {
  id        String   @id @default(uuid())
  name      String
  role      String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [name], references: [name])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Milestone {
  id          String   @id @default(uuid())
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  title       String
  description String?
  dueDate     DateTime
  status      String   @default("Not Started")
  tasks       Task[]
  events      Event[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id          Int      @id @default(autoincrement())
  milestoneId String
  milestone   Milestone @relation(fields: [milestoneId], references: [id], onDelete: Cascade)
  title       String
  description String?
  assignedTo  String[] @default([]) // Changed to String[] to support multiple assignees
  completed   Boolean  @default(false) // Added for task completion
  status      String   @default("Pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Event {
  id          String    @id @default(uuid())
  title       String
  description String?
  startDate   DateTime  // Changed to DateTime
  endDate     DateTime  // Changed to DateTime
  priority    String?
  category    String?
  milestoneId String?
  milestone   Milestone? @relation(fields: [milestoneId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}